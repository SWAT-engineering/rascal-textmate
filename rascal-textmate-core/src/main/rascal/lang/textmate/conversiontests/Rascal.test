# SYNTAX TEST "Rascal"
# ------------------------------------------------------------------------------
# BSD 2-Clause License
#
# Copyright (c) 2024, Swat.engineering
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# ------------------------------------------------------------------------------

  "foo bar"
# ^^^^^^^^^ string

  "foo<x + 1>bar"
# ^^^^^     ^^^^^ string
#      ^^^^^      -string

### TODO: The following test shows that, currently, multi-line strings are
### disabled. This is because the converter determines that:
###   - `>` doesn't uniquely delineate interpolation (it could also be
###     greater-than in expressions or prioritize-before in grammars);
###   - `"` doesn't uniquely delineate strings (it could also be the end of
###     interpolation).
### Therefore, to avoid excessive tokenization errors, the converter doesn't
### generate begin/end patterns that begin with `>` or `"`. This might be
### improved in the future.

  "foo
# ^^^^ -string
  bar"
# ^^^^ -string