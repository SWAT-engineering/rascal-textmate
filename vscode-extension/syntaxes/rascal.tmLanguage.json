{
  "repository": {
    "/inner/single/literal.integer": {
      "match": "((?:0(?:[0-7]+?(?!(?:[0-9]|[A-Z]|\\_|[a-z]))))|(?:(?:[1-9](?:[0-9]*?(?!(?:[0-9]|[A-Z]|\\_|[a-z]))))|(?:(?:\\b0\\b)(?!(?:[0-9]|[A-Z]|\\_|[a-z]))))|(?:0(?:X|x)(?:(?:[0-9]|[A-F]|[a-f])+?(?!(?:[0-9]|[A-Z]|\\_|[a-z])))))",
      "name": "/inner/single/literal.integer",
      "captures": {
        "1": {
          "name": "constant.numeric"
        }
      }
    },
    "/inner/multi/midstringchars,poststringchars": {
      "begin": "(\\>)",
      "end": "((?:\\\")|(?:\\<))",
      "patterns": [
        {
          "match": "((?:(?:(?:\\\\)(?:\\\"|\\'|\\<|\\>|\\\\|b|f|n|r|t))|(?:[\\x{01}-\\!]|[\\#-\\&]|[\\(-\\;]|\\=|[\\?-\\[]|[\\]-\\x{10FFFF}])|(?:(?:\\n)(?:\\t|\\x{20}|\\x{A0}|\\x{1680}|[\\x{2000}-\\x{200A}]|\\x{202F}|\\x{205F}|\\x{3000})*?(?:\\'))|(?:(?:(?:\\\\)U(?:(?:\\b10\\b)|(?:(?:\\b0\\b)(?:[0-9]|[A-F]|[a-f])))(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f]))|(?:(?:\\\\)u(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f]))|(?:(?:\\\\)a[0-7](?:[0-9]|[A-F]|[a-f]))))+?)",
          "captures": {
            "1": {
              "name": "string.quoted.double"
            }
          }
        },
        {
          "match": "([\\x{01}-\\x{10FFFF}])",
          "captures": {
            "1": {
              "name": "string.quoted.double"
            }
          }
        }
      ],
      "endCaptures": {
        "1": {
          "name": "string.quoted.double"
        }
      },
      "name": "/inner/multi/midstringchars,poststringchars",
      "beginCaptures": {
        "1": {
          "name": "string.quoted.double"
        }
      }
    },
    "/inner/multi/comment.2": {
      "begin": "(\\/\\*)",
      "end": "(\\*\\/)",
      "patterns": [
        {
          "match": "((?:(?:[\\x{01}-\\)]|[\\+-\\x{10FFFF}])|(?:(?:\\*)(?!(?:\\/))))+?)",
          "captures": {
            "1": {
              "name": "comment"
            }
          }
        },
        {
          "match": "([\\x{01}-\\x{10FFFF}])",
          "captures": {
            "1": {
              "name": "string"
            }
          }
        },
        {
          "match": "([\\x{01}-\\t\\x{0B}-\\;\\=\\?-\\[\\]-\\_a-\\x{10FFFF}]+?(?![\\x{01}-\\t\\x{0B}-\\;\\=\\?-\\[\\]-\\_a-\\x{10FFFF}]))",
          "name": "concretepart.text",
          "captures": {
            "1": {
              "name": "string"
            }
          }
        },
        {
          "include": "#/inner/single/$delimiters"
        },
        {
          "include": "#/inner/single/output.resultOutput"
        },
        {
          "include": "#/inner/single/concretepart.bq"
        },
        {
          "include": "#/inner/single/concretepart.bs"
        },
        {
          "include": "#/inner/single/concretepart.gt"
        },
        {
          "include": "#/inner/single/concretepart.lt"
        },
        {
          "include": "#/inner/single/concretepart.text"
        },
        {
          "include": "#/inner/single/tag.empty"
        },
        {
          "include": "#/inner/single/midstringchars"
        },
        {
          "include": "#/inner/multi/midstringchars,poststringchars"
        },
        {
          "include": "#/inner/single/poststringchars"
        },
        {
          "include": "#/inner/multi/midstringchars,poststringchars"
        },
        {
          "include": "#/inner/single/comment.1"
        },
        {
          "include": "#/inner/single/comment.2"
        },
        {
          "include": "#/inner/multi/comment.2"
        },
        {
          "include": "#/inner/single/literal.regExp"
        },
        {
          "include": "#/inner/single/caseinsensitivestringconstant"
        },
        {
          "include": "#/inner/multi/caseinsensitivestringconstant"
        },
        {
          "include": "#/inner/single/prestringchars"
        },
        {
          "include": "#/inner/multi/prestringchars,stringconstant"
        },
        {
          "include": "#/inner/single/stringconstant"
        },
        {
          "include": "#/inner/multi/prestringchars,stringconstant"
        },
        {
          "include": "#/inner/single/literal.integer"
        },
        {
          "include": "#/inner/single/literal.rational"
        },
        {
          "include": "#/inner/single/literal.real"
        },
        {
          "include": "#/inner/single/output.stderrOutput"
        },
        {
          "include": "#/inner/single/output.stdoutOutput"
        },
        {
          "include": "#/inner/single/$keywords"
        }
      ],
      "endCaptures": {},
      "name": "/outer/`",
      "beginCaptures": {}
    },
    "comment.2": {
      "match": "((?:\\/\\*)(?:(?:\\*(?!\\/))|[\\x{01}-\\)\\+-\\x{10FFFF}])*?(?:\\*\\/))",
      "name": "comment.2",
      "captures": {
        "1": {
          "name": "string"
        }
      }
    },
    "midstringchars": {
      "match": "(\\>(?:(?:\\n[\\t\\x{20}\\x{A0}\\x{1680}\\x{2000}-\\x{200A}\\x{202F}\\x{205F}\\x{3000}]*?\\')|(?:(?:\\\\)[\\\"\\'\\<\\>\\\\bfnrt])|[\\x{01}-\\!\\#-\\&\\(-\\;\\=\\?-\\[\\]-\\x{10FFFF}]|(?:(?:(?:\\\\)U(?:(?:\\b10\\b)|(?:(?:\\b0\\b)[0-9A-Fa-f]))[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)a[0-7][0-9A-Fa-f])))*?\\<)",
      "name": "midstringchars",
      "captures": {
        "1": {
          "name": "comment"
        }
      }
    },
    "prestringchars": {
      "match": "(\\\"(?:(?:\\n[\\t\\x{20}\\x{A0}\\x{1680}\\x{2000}-\\x{200A}\\x{202F}\\x{205F}\\x{3000}]*?\\')|(?:(?:\\\\)[\\\"\\'\\<\\>\\\\bfnrt])|[\\x{01}-\\!\\#-\\&\\(-\\;\\=\\?-\\[\\]-\\x{10FFFF}]|(?:(?:(?:\\\\)U(?:(?:\\b10\\b)|(?:(?:\\b0\\b)[0-9A-Fa-f]))[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)a[0-7][0-9A-Fa-f])))*?\\<)",
      "name": "prestringchars",
      "captures": {
        "1": {
          "name": "string.quoted.double"
        }
      }
    },
    "~delimiters": {
      "match": "(?:(?:\\-)|(?:\\))|(?:\\')|(?:\\&)|(?:non\\-assoc)|(?:\\&\\=)|(?:\\<\\-)|(?:\\*\\=)|(?:\\+\\=)|(?:top\\-down\\-break)|(?:\\,)|(?:bottom\\-up\\-break)|(?:\\/)|(?:\\.\\.\\.)|(?:\\/\\=)|(?:\\.)|(?:\\x{21E8})|(?:\\()|(?:\\x{226B})|(?:\\+)|(?:\\*)|(?:\\n)|(?:\\*\\/)|(?:\\%)|(?:\\\\\\`)|(?:\\!\\:\\=)|(?:\\$)|(?:\\<\\=)|(?:\\!\\<\\<)|(?:\\!)|(?:\\=\\>)|(?:\\!\\>\\>)|(?:\\=\\=)|(?:\\>\\>)|(?:\\\\\\<)|(?:\\:\\:)|(?:\\x{26A0})|(?:\\/\\/)|(?:\\.\\.)|(?:\\&\\&)|(?:\\`)|(?:\\@)|(?:\\|\\|)|(?:\\\\\\\\)|(?:\\<\\<)|(?:\\:\\=)|(?:\\#)|(?:\\\\\\>)|(?:\\<\\=\\=\\>)|(?:\\\")|(?:bottom\\-up)|(?:\\<\\<\\=)|(?:\\=)|(?:\\})|(?:\\])|(?:\\|)|(?:\\\\)|(?:\\!\\=)|(?:\\<)|(?:\\>\\=)|(?:\\?)|(?:\\?\\=)|(?:\\<\\:)|(?:\\=\\=\\>)|(?:\\>)|(?:\\^)|(?:\\/\\*)|(?:\\;)|(?:\\{)|(?:\\[)|(?:\\:\\/\\/)|(?:top\\-down)|(?:\\:)|(?:\\-\\=)|(?:\\$T))",
      "name": "~delimiters",
      "captures": {}
    },
    "output.resultOutput": {
      "match": "((?:\\x{21E8})[\\x{01}-\\t\\x{0B}-\\x{0C}\\x{0E}-\\x{10FFFF}]*?\\n)",
      "name": "output.resultOutput",
      "captures": {
        "1": {
          "name": "string"
        }
      }
    },
    "poststringchars": {
      "match": "(\\>(?:(?:\\n[\\t\\x{20}\\x{A0}\\x{1680}\\x{2000}-\\x{200A}\\x{202F}\\x{205F}\\x{3000}]*?\\')|(?:(?:\\\\)[\\\"\\'\\<\\>\\\\bfnrt])|[\\x{01}-\\!\\#-\\&\\(-\\;\\=\\?-\\[\\]-\\x{10FFFF}]|(?:(?:(?:\\\\)U(?:(?:\\b10\\b)|(?:(?:\\b0\\b)[0-9A-Fa-f]))[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)a[0-7][0-9A-Fa-f])))*?\\\")",
      "name": "poststringchars",
      "captures": {
        "1": {
          "name": "comment"
        }
      }
    },
    "literal.rational": {
      "match": "((?:[1-9][0-9]*?r[0-9](?:[0-9]*?(?![0-9A-Z\\_a-z])))|(?:[0-9][0-9]*?r))",
      "name": "literal.rational",
      "captures": {
        "1": {
          "name": "constant.numeric"
        }
      }
    },
    "output.stderrOutput": {
      "match": "((?:(?:^)(?:\\x{26A0}))[\\x{01}-\\t\\x{0B}-\\x{0C}\\x{0E}-\\x{10FFFF}]*?\\n)",
      "name": "output.stderrOutput",
      "captures": {
        "1": {
          "name": "string"
        }
      }
    },
    "stringconstant": {
      "match": "((?:\\\")(?:(?:\\n[\\t\\x{20}\\x{A0}\\x{1680}\\x{2000}-\\x{200A}\\x{202F}\\x{205F}\\x{3000}]*?\\')|(?:(?:\\\\)[\\\"\\'\\<\\>\\\\bfnrt])|[\\x{01}-\\!\\#-\\&\\(-\\;\\=\\?-\\[\\]-\\x{10FFFF}]|(?:(?:(?:\\\\)U(?:(?:\\b10\\b)|(?:(?:\\b0\\b)[0-9A-Fa-f]))[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)a[0-7][0-9A-Fa-f])))*?(?:\\\"))",
      "name": "stringconstant",
      "captures": {
        "1": {
          "name": "string.quoted.double"
        }
      }
    },
    "caseinsensitivestringconstant": {
      "match": "((?:\\')(?:(?:\\n[\\t\\x{20}\\x{A0}\\x{1680}\\x{2000}-\\x{200A}\\x{202F}\\x{205F}\\x{3000}]*?\\')|(?:(?:\\\\)[\\\"\\'\\<\\>\\\\bfnrt])|[\\x{01}-\\!\\#-\\&\\(-\\;\\=\\?-\\[\\]-\\x{10FFFF}]|(?:(?:(?:\\\\)U(?:(?:\\b10\\b)|(?:(?:\\b0\\b)[0-9A-Fa-f]))[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)a[0-7][0-9A-Fa-f])))*?(?:\\'))",
      "name": "caseinsensitivestringconstant",
      "captures": {
        "1": {
          "name": "string"
        }
      }
    },
    "literal.real": {
      "match": "((?:(?:(?<!\\.)(?:\\.))[0-9]+?[Ee][\\+\\-]??[0-9]+?[DFdf]??)|(?:[0-9]+?(?:(?:\\.)(?!(?:\\.)))[0-9]*?[DFdf]??)|(?:(?:(?<!\\.)(?:\\.))[0-9]+?[DFdf]??)|(?:[0-9]+?[Ee][\\+\\-]??[0-9]+?[DFdf]??)|(?:[0-9]+?[DFdf])|(?:[0-9]+?(?:\\.)[0-9]*?[Ee][\\+\\-]??[0-9]+?[DFdf]??))",
      "name": "literal.real",
      "captures": {
        "1": {
          "name": "string"
        }
      }
    },
    "literal.integer": {
      "match": "((?:0(?:[0-7]+?(?![0-9A-Z\\_a-z])))|(?:(?:[1-9](?:[0-9]*?(?![0-9A-Z\\_a-z])))|(?:(?:\\b0\\b)(?![0-9A-Z\\_a-z])))|(?:0[Xx](?:[0-9A-Fa-f]+?(?![0-9A-Z\\_a-z]))))",
      "name": "literal.integer",
      "captures": {
        "1": {
          "name": "constant.numeric"
        }
      }
    },
    "comment.1": {
      "match": "((?:\\/\\/)(?:[\\x{01}-\\t\\x{0B}-\\x{10FFFF}]*?(?![\\t\\r\\x{20}\\x{A0}\\x{1680}\\x{2000}-\\x{200A}\\x{202F}\\x{205F}\\x{3000}])(?:$)))",
      "name": "comment.1",
      "captures": {
        "1": {
          "name": "string"
        }
      }
    },
    "/outer/[": {
      "begin": "(?:\\[)",
      "end": "(?:\\])",
      "patterns": [
        {
          "match": "([\\x{01}-\\x{1F}\\!\\#-\\&\\(-\\,\\.-\\;\\=\\?-Z\\^-\\x{10FFFF}])",
          "name": "char.1",
          "captures": {
            "1": {
              "name": "string"
            }
          }
        },
        {
          "match": "((?:(?:\\\\)U(?:(?:\\b10\\b)|(?:(?:\\b0\\b)[0-9A-Fa-f]))[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(?:(?:\\\\)a[0-7][0-9A-Fa-f]))",
          "name": "char.2",
          "captures": {
            "1": {
              "name": "string"
            }
          }
        },
        {
          "match": "((?:\\\\)[\\x{20}\\\"\\'\\-\\<\\>\\[-\\]bfnrt])",
          "name": "char.3",
          "captures": {
            "1": {
              "name": "string"
            }
          }
        },
        {
          "include": "#/inner/single/poststringchars"
        },
        {
          "include": "#/inner/multi/midstringchars,poststringchars"
        },
        {
          "include": "#/inner/single/comment.1"
        },
        {
          "include": "#/inner/single/comment.2"
        },
        {
          "include": "#/inner/multi/comment.2"
        },
        {
          "include": "#/inner/single/literal.regExp"
        },
        {
          "include": "#/inner/single/caseinsensitivestringconstant"
        },
        {
          "include": "#/inner/multi/caseinsensitivestringconstant"
        },
        {
          "include": "#/inner/single/prestringchars"
        },
        {
          "include": "#/inner/multi/prestringchars,stringconstant"
        },
        {
          "include": "#/inner/single/stringconstant"
        },
        {
          "include": "#/inner/multi/prestringchars,stringconstant"
        },
        {
          "include": "#/inner/single/literal.integer"
        },
        {
          "include": "#/inner/single/literal.rational"
        },
        {
          "include": "#/inner/single/literal.real"
        },
        {
          "include": "#/inner/single/output.stderrOutput"
        },
        {
          "include": "#/inner/single/output.stdoutOutput"
        },
        {
          "include": "#/inner/single/$keywords"
        }
      ],
      "endCaptures": {},
      "name": "/outer/[",
      "beginCaptures": {}
    },
    "/inner/multi/caseinsensitivestringconstant": {
      "begin": "(\\')",
      "end": "(\\')",
      "patterns": [
        {
          "match": "((?:(?:(?:\\\\)(?:\\\"|\\'|\\<|\\>|\\\\|b|f|n|r|t))|(?:[\\x{01}-\\!]|[\\#-\\&]|[\\(-\\;]|\\=|[\\?-\\[]|[\\]-\\x{10FFFF}])|(?:(?:\\n)(?:\\t|\\x{20}|\\x{A0}|\\x{1680}|[\\x{2000}-\\x{200A}]|\\x{202F}|\\x{205F}|\\x{3000})*?(?:\\'))|(?:(?:(?:\\\\)U(?:(?:\\b10\\b)|(?:(?:\\b0\\b)(?:[0-9]|[A-F]|[a-f])))(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f]))|(?:(?:\\\\)u(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f]))|(?:(?:\\\\)a[0-7](?:[0-9]|[A-F]|[a-f]))))+?)",
          "captures": {
            "1": {
              "name": "string.quoted.single"
            }
          }
        },
        {
          "match": "([\\x{01}-\\x{10FFFF}])",
          "captures": {
            "1": {
              "name": "string.quoted.single"
            }
          }
        }
      ],
      "endCaptures": {
        "1": {
          "name": "string.quoted.single"
        }
      },
      "name": "/inner/multi/caseinsensitivestringconstant",
      "beginCaptures": {
        "1": {
          "name": "string.quoted.single"
        }
      }
    },
    "literal.regExp": {
      "match": "((?:\\/)(?:(?:\\\\(?![\\/\\<\\>\\\\]))|[\\x{01}-\\.0-\\;\\=\\?-\\[\\]-\\x{10FFFF}]|(?:\\\\[\\/\\<\\>\\\\])|(?:(?:\\<)(?:(?=(?<head>(?:(?:(?<![A-Z\\_a-z])[A-Z\\_a-z])(?:[0-9A-Z\\_a-z]*?(?![0-9A-Z\\_a-z]))))(?<tail>.*)$)(?!(?:(?:(?:\\bbreak\\b)|(?:\\bfor\\b)|(?:\\bstr\\b)|(?:\\bnode\\b)|(?:\\btuple\\b)|(?:\\bsolve\\b)|(?:\\brat\\b)|(?:\\bdynamic\\b)|(?:\\bassoc\\b)|(?:\\bbag\\b)|(?:\\bset\\b)|(?:\\bo\\b)|(?:\\bstart\\b)|(?:(?:\\bint\\b)|(?:\\blrel\\b)|(?:\\bbool\\b)|(?:\\btype\\b)|(?:\\bset\\b)|(?:\\bbag\\b)|(?:\\brat\\b)|(?:\\breal\\b)|(?:\\bnode\\b)|(?:\\btuple\\b)|(?:\\bmap\\b)|(?:\\bloc\\b)|(?:\\bnum\\b)|(?:\\blist\\b)|(?:\\bvalue\\b)|(?:\\bvoid\\b)|(?:\\brel\\b)|(?:\\bdatetime\\b)|(?:\\bstr\\b))|(?:\\blrel\\b)|(?:\\bcontinue\\b)|(?:\\bbracket\\b)|(?:\\brel\\b)|(?:\\blist\\b)|(?:\\btest\\b)|(?:\\breturn\\b)|(?:\\bfalse\\b)|(?:\\bjoin\\b)|(?:\\belse\\b)|(?:\\bit\\b)|(?:\\bin\\b)|(?:\\bif\\b)|(?:non\\-assoc)|(?:\\blexical\\b)|(?:\\bvalue\\b)|(?:\\bmap\\b)|(?:\\bvisit\\b)|(?:\\ball\\b)|(?:\\btry\\b)|(?:\\bprivate\\b)|(?:\\btrue\\b)|(?:\\bfinally\\b)|(?:\\breal\\b)|(?:\\bvoid\\b)|(?:\\bkeyword\\b)|(?:\\bany\\b)|(?:\\bone\\b)|(?:\\bmodule\\b)|(?:\\bpublic\\b)|(?:\\bthrows\\b)|(?:\\balias\\b)|(?:\\bdefault\\b)|(?:\\bcatch\\b)|(?:\\binsert\\b)|(?:\\banno\\b)|(?:\\bthrow\\b)|(?:\\bbool\\b)|(?:\\bswitch\\b)|(?:\\btype\\b)|(?:\\bwhile\\b)|(?:\\bnotin\\b)|(?:\\bcase\\b)|(?:\\blayout\\b)|(?:\\bmod\\b)|(?:\\bextend\\b)|(?:\\bappend\\b)|(?:\\bfail\\b)|(?:\\bdatetime\\b)|(?:\\bfilter\\b)|(?:\\bloc\\b)|(?:\\bassert\\b)|(?:\\bdata\\b)|(?:\\bimport\\b)|(?:\\bnum\\b)|(?:\\btag\\b)|(?:\\bsyntax\\b)|(?:\\bint\\b)))\\k<tail>$)\\k<head>|(?:\\\\[A-Z\\_a-z](?:[\\-0-9A-Z\\_a-z]*?(?![\\-0-9A-Z\\_a-z]))))(?:\\>))|(?:(?:\\<)(?:(?=(?<head>(?:(?:(?<![A-Z\\_a-z])[A-Z\\_a-z])(?:[0-9A-Z\\_a-z]*?(?![0-9A-Z\\_a-z]))))(?<tail>.*)$)(?!(?:(?:(?:\\bbreak\\b)|(?:\\bfor\\b)|(?:\\bstr\\b)|(?:\\bnode\\b)|(?:\\btuple\\b)|(?:\\bsolve\\b)|(?:\\brat\\b)|(?:\\bdynamic\\b)|(?:\\bassoc\\b)|(?:\\bbag\\b)|(?:\\bset\\b)|(?:\\bo\\b)|(?:\\bstart\\b)|(?:(?:\\bint\\b)|(?:\\blrel\\b)|(?:\\bbool\\b)|(?:\\btype\\b)|(?:\\bset\\b)|(?:\\bbag\\b)|(?:\\brat\\b)|(?:\\breal\\b)|(?:\\bnode\\b)|(?:\\btuple\\b)|(?:\\bmap\\b)|(?:\\bloc\\b)|(?:\\bnum\\b)|(?:\\blist\\b)|(?:\\bvalue\\b)|(?:\\bvoid\\b)|(?:\\brel\\b)|(?:\\bdatetime\\b)|(?:\\bstr\\b))|(?:\\blrel\\b)|(?:\\bcontinue\\b)|(?:\\bbracket\\b)|(?:\\brel\\b)|(?:\\blist\\b)|(?:\\btest\\b)|(?:\\breturn\\b)|(?:\\bfalse\\b)|(?:\\bjoin\\b)|(?:\\belse\\b)|(?:\\bit\\b)|(?:\\bin\\b)|(?:\\bif\\b)|(?:non\\-assoc)|(?:\\blexical\\b)|(?:\\bvalue\\b)|(?:\\bmap\\b)|(?:\\bvisit\\b)|(?:\\ball\\b)|(?:\\btry\\b)|(?:\\bprivate\\b)|(?:\\btrue\\b)|(?:\\bfinally\\b)|(?:\\breal\\b)|(?:\\bvoid\\b)|(?:\\bkeyword\\b)|(?:\\bany\\b)|(?:\\bone\\b)|(?:\\bmodule\\b)|(?:\\bpublic\\b)|(?:\\bthrows\\b)|(?:\\balias\\b)|(?:\\bdefault\\b)|(?:\\bcatch\\b)|(?:\\binsert\\b)|(?:\\banno\\b)|(?:\\bthrow\\b)|(?:\\bbool\\b)|(?:\\bswitch\\b)|(?:\\btype\\b)|(?:\\bwhile\\b)|(?:\\bnotin\\b)|(?:\\bcase\\b)|(?:\\blayout\\b)|(?:\\bmod\\b)|(?:\\bextend\\b)|(?:\\bappend\\b)|(?:\\bfail\\b)|(?:\\bdatetime\\b)|(?:\\bfilter\\b)|(?:\\bloc\\b)|(?:\\bassert\\b)|(?:\\bdata\\b)|(?:\\bimport\\b)|(?:\\bnum\\b)|(?:\\btag\\b)|(?:\\bsyntax\\b)|(?:\\bint\\b)))\\k<tail>$)\\k<head>|(?:\\\\[A-Z\\_a-z](?:[\\-0-9A-Z\\_a-z]*?(?![\\-0-9A-Z\\_a-z]))))(?:\\:)(?:(?:\\\\[\\/\\<\\>\\\\])|(?:(?:\\<)(?:(?=(?<head>(?:(?:(?<![A-Z\\_a-z])[A-Z\\_a-z])(?:[0-9A-Z\\_a-z]*?(?![0-9A-Z\\_a-z]))))(?<tail>.*)$)(?!(?:(?:(?:\\bbreak\\b)|(?:\\bfor\\b)|(?:\\bstr\\b)|(?:\\bnode\\b)|(?:\\btuple\\b)|(?:\\bsolve\\b)|(?:\\brat\\b)|(?:\\bdynamic\\b)|(?:\\bassoc\\b)|(?:\\bbag\\b)|(?:\\bset\\b)|(?:\\bo\\b)|(?:\\bstart\\b)|(?:(?:\\bint\\b)|(?:\\blrel\\b)|(?:\\bbool\\b)|(?:\\btype\\b)|(?:\\bset\\b)|(?:\\bbag\\b)|(?:\\brat\\b)|(?:\\breal\\b)|(?:\\bnode\\b)|(?:\\btuple\\b)|(?:\\bmap\\b)|(?:\\bloc\\b)|(?:\\bnum\\b)|(?:\\blist\\b)|(?:\\bvalue\\b)|(?:\\bvoid\\b)|(?:\\brel\\b)|(?:\\bdatetime\\b)|(?:\\bstr\\b))|(?:\\blrel\\b)|(?:\\bcontinue\\b)|(?:\\bbracket\\b)|(?:\\brel\\b)|(?:\\blist\\b)|(?:\\btest\\b)|(?:\\breturn\\b)|(?:\\bfalse\\b)|(?:\\bjoin\\b)|(?:\\belse\\b)|(?:\\bit\\b)|(?:\\bin\\b)|(?:\\bif\\b)|(?:non\\-assoc)|(?:\\blexical\\b)|(?:\\bvalue\\b)|(?:\\bmap\\b)|(?:\\bvisit\\b)|(?:\\ball\\b)|(?:\\btry\\b)|(?:\\bprivate\\b)|(?:\\btrue\\b)|(?:\\bfinally\\b)|(?:\\breal\\b)|(?:\\bvoid\\b)|(?:\\bkeyword\\b)|(?:\\bany\\b)|(?:\\bone\\b)|(?:\\bmodule\\b)|(?:\\bpublic\\b)|(?:\\bthrows\\b)|(?:\\balias\\b)|(?:\\bdefault\\b)|(?:\\bcatch\\b)|(?:\\binsert\\b)|(?:\\banno\\b)|(?:\\bthrow\\b)|(?:\\bbool\\b)|(?:\\bswitch\\b)|(?:\\btype\\b)|(?:\\bwhile\\b)|(?:\\bnotin\\b)|(?:\\bcase\\b)|(?:\\blayout\\b)|(?:\\bmod\\b)|(?:\\bextend\\b)|(?:\\bappend\\b)|(?:\\bfail\\b)|(?:\\bdatetime\\b)|(?:\\bfilter\\b)|(?:\\bloc\\b)|(?:\\bassert\\b)|(?:\\bdata\\b)|(?:\\bimport\\b)|(?:\\bnum\\b)|(?:\\btag\\b)|(?:\\bsyntax\\b)|(?:\\bint\\b)))\\k<tail>$)\\k<head>|(?:\\\\[A-Z\\_a-z](?:[\\-0-9A-Z\\_a-z]*?(?![\\-0-9A-Z\\_a-z]))))(?:\\>))|(?:\\\\(?![\\<\\>\\\\]))|[\\x{01}-\\.0-\\;\\=\\?-\\[\\]-\\x{10FFFF}])*?(?:\\>)))*?(?:\\/)[dims]*?)",
      "name": "literal.regExp",
      "captures": {
        "1": {
          "name": "string"
        }
      }
    },
    "/inner/multi/prestringchars,stringconstant": {
      "begin": "(\\\")",
      "end": "((?:\\\")|(?:\\<))",
      "patterns": [
        {
          "match": "((?:(?:(?:\\\\)(?:\\\"|\\'|\\<|\\>|\\\\|b|f|n|r|t))|(?:[\\x{01}-\\!]|[\\#-\\&]|[\\(-\\;]|\\=|[\\?-\\[]|[\\]-\\x{10FFFF}])|(?:(?:\\n)(?:\\t|\\x{20}|\\x{A0}|\\x{1680}|[\\x{2000}-\\x{200A}]|\\x{202F}|\\x{205F}|\\x{3000})*?(?:\\'))|(?:(?:(?:\\\\)U(?:(?:\\b10\\b)|(?:(?:\\b0\\b)(?:[0-9]|[A-F]|[a-f])))(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f]))|(?:(?:\\\\)u(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f]))|(?:(?:\\\\)a[0-7](?:[0-9]|[A-F]|[a-f]))))+?)",
          "captures": {
            "1": {
              "name": "string.quoted.double"
            }
          }
        },
        {
          "match": "((?:(?:(?:\\\\)(?:\\\"|\\'|\\<|\\>|\\\\|b|f|n|r|t))|(?:[\\x{01}-\\!]|[\\#-\\&]|[\\(-\\;]|\\=|[\\?-\\[]|[\\]-\\x{10FFFF}])|(?:(?:\\n)(?:\\t|\\x{20}|\\x{A0}|\\x{1680}|[\\x{2000}-\\x{200A}]|\\x{202F}|\\x{205F}|\\x{3000})*?(?:\\'))|(?:(?:(?:\\\\)U(?:(?:\\b10\\b)|(?:(?:\\b0\\b)(?:[0-9]|[A-F]|[a-f])))(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f]))|(?:(?:\\\\)u(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f]))|(?:(?:\\\\)a[0-7](?:[0-9]|[A-F]|[a-f]))))+?)",
          "captures": {
            "1": {
              "name": "string.quoted.double"
            }
          }
        },
        {
          "match": "([\\x{01}-\\x{10FFFF}])",
          "captures": {
            "1": {
              "name": "string.quoted.double"
            }
          }
        }
      ],
      "endCaptures": {
        "1": {
          "name": "string.quoted.double"
        }
      },
      "name": "/inner/multi/prestringchars,stringconstant",
      "beginCaptures": {
        "1": {
          "name": "string.quoted.double"
        }
      }
    },
    "/inner/single/output.stdoutOutput": {
      "match": "((?:(?:^)(?:\\x{226B}))(?:[\\x{01}-\\t]|[\\x{0B}-\\x{0C}]|[\\x{0E}-\\x{10FFFF}])*?(?:\\n))",
      "name": "/inner/single/output.stdoutOutput",
      "captures": {
        "1": {
          "name": "string"
        }
      }
    },
    "tag.empty": {
      "match": "((?:\\@)(?:(?:[\\t-\\r\\x{20}\\x{85}\\x{A0}\\x{1680}\\x{180E}\\x{2000}-\\x{200A}\\x{2028}-\\x{2029}\\x{202F}\\x{205F}\\x{3000}]|(?:((?:\\/\\/)(?:[\\x{01}-\\t\\x{0B}-\\x{10FFFF}]*?(?![\\t\\r\\x{20}\\x{A0}\\x{1680}\\x{2000}-\\x{200A}\\x{202F}\\x{205F}\\x{3000}])(?:$)))|((?:\\/\\*)(?:(?:\\*(?!\\/))|[\\x{01}-\\)\\+-\\x{10FFFF}])*?(?:\\*\\/))))*?(?![\\t-\\r\\x{20}\\x{85}\\x{A0}\\x{1680}\\x{180E}\\x{2000}-\\x{200A}\\x{2028}-\\x{2029}\\x{202F}\\x{205F}\\x{3000}])(?!(?:\\/\\/))(?!(?:\\/\\*)))(?:(?=(?<head>(?:(?:(?<![A-Z\\_a-z])[A-Z\\_a-z])(?:[0-9A-Z\\_a-z]*?(?![0-9A-Z\\_a-z]))))(?<tail>.*)$)(?!(?:(?:(?:\\bbreak\\b)|(?:\\bfor\\b)|(?:\\bstr\\b)|(?:\\bnode\\b)|(?:\\btuple\\b)|(?:\\bsolve\\b)|(?:\\brat\\b)|(?:\\bdynamic\\b)|(?:\\bassoc\\b)|(?:\\bbag\\b)|(?:\\bset\\b)|(?:\\bo\\b)|(?:\\bstart\\b)|(?:(?:\\bint\\b)|(?:\\blrel\\b)|(?:\\bbool\\b)|(?:\\btype\\b)|(?:\\bset\\b)|(?:\\bbag\\b)|(?:\\brat\\b)|(?:\\breal\\b)|(?:\\bnode\\b)|(?:\\btuple\\b)|(?:\\bmap\\b)|(?:\\bloc\\b)|(?:\\bnum\\b)|(?:\\blist\\b)|(?:\\bvalue\\b)|(?:\\bvoid\\b)|(?:\\brel\\b)|(?:\\bdatetime\\b)|(?:\\bstr\\b))|(?:\\blrel\\b)|(?:\\bcontinue\\b)|(?:\\bbracket\\b)|(?:\\brel\\b)|(?:\\blist\\b)|(?:\\btest\\b)|(?:\\breturn\\b)|(?:\\bfalse\\b)|(?:\\bjoin\\b)|(?:\\belse\\b)|(?:\\bit\\b)|(?:\\bin\\b)|(?:\\bif\\b)|(?:non\\-assoc)|(?:\\blexical\\b)|(?:\\bvalue\\b)|(?:\\bmap\\b)|(?:\\bvisit\\b)|(?:\\ball\\b)|(?:\\btry\\b)|(?:\\bprivate\\b)|(?:\\btrue\\b)|(?:\\bfinally\\b)|(?:\\breal\\b)|(?:\\bvoid\\b)|(?:\\bkeyword\\b)|(?:\\bany\\b)|(?:\\bone\\b)|(?:\\bmodule\\b)|(?:\\bpublic\\b)|(?:\\bthrows\\b)|(?:\\balias\\b)|(?:\\bdefault\\b)|(?:\\bcatch\\b)|(?:\\binsert\\b)|(?:\\banno\\b)|(?:\\bthrow\\b)|(?:\\bbool\\b)|(?:\\bswitch\\b)|(?:\\btype\\b)|(?:\\bwhile\\b)|(?:\\bnotin\\b)|(?:\\bcase\\b)|(?:\\blayout\\b)|(?:\\bmod\\b)|(?:\\bextend\\b)|(?:\\bappend\\b)|(?:\\bfail\\b)|(?:\\bdatetime\\b)|(?:\\bfilter\\b)|(?:\\bloc\\b)|(?:\\bassert\\b)|(?:\\bdata\\b)|(?:\\bimport\\b)|(?:\\bnum\\b)|(?:\\btag\\b)|(?:\\bsyntax\\b)|(?:\\bint\\b)))\\k<tail>$)\\k<head>|(?:\\\\[A-Z\\_a-z](?:[\\-0-9A-Z\\_a-z]*?(?![\\-0-9A-Z\\_a-z])))))",
      "name": "tag.empty",
      "captures": {
        "1": {
          "name": "comment"
        },
        "2": {
          "name": "comment"
        },
        "3": {
          "name": "comment"
        },
        "4": {
          "name": ""
        },
        "5": {
          "name": ""
        }
      }
    },
    "output.stdoutOutput": {
      "match": "((?:(?:^)(?:\\x{226B}))[\\x{01}-\\t\\x{0B}-\\x{0C}\\x{0E}-\\x{10FFFF}]*?\\n)",
      "name": "output.stdoutOutput",
      "captures": {
        "1": {
          "name": "string"
        }
      }
    }
  },
  "scopeName": "source.rascalmpl.injection",
  "patterns": [
    {
      "include": "#/inner/single/$delimiters"
    },
    {
      "include": "#/inner/single/output.resultOutput"
    },
    {
      "include": "#/outer/`"
    },
    {
      "include": "#/outer/["
    },
    {
      "include": "#/inner/single/tag.empty"
    },
    {
      "include": "#/inner/single/midstringchars"
    },
    {
      "include": "#/inner/single/poststringchars"
    },
    {
      "include": "#/inner/multi/midstringchars,poststringchars"
    },
    {
      "include": "#/inner/single/comment.1"
    },
    {
      "include": "#/inner/single/comment.2"
    },
    {
      "include": "#/inner/multi/comment.2"
    },
    {
      "include": "#/inner/single/literal.regExp"
    },
    {
      "include": "#/inner/single/caseinsensitivestringconstant"
    },
    {
      "include": "#/inner/multi/caseinsensitivestringconstant"
    },
    {
      "include": "#/inner/single/prestringchars"
    },
    {
      "include": "#/inner/single/stringconstant"
    },
    {
      "include": "#/inner/multi/prestringchars,stringconstant"
    },
    {
      "include": "#/inner/single/literal.integer"
    },
    {
      "include": "#/inner/single/literal.rational"
    },
    {
      "include": "#/inner/single/literal.real"
    },
    {
      "include": "#/inner/single/output.stderrOutput"
    },
    {
      "include": "#/inner/single/output.stdoutOutput"
    },
    {
      "include": "#/inner/single/$keywords"
    }
  ],
  "injectionSelector": "R:source.rascalmpl"
}