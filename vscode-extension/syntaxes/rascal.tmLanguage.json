{
  "repository": {
    "prod(lex(\"Comment\"),[lit(\"//\"),conditional(\\iter-star(\\char-class([range(1,9),range(11,1114111)])),{\\not-follow(\\char-class([range(9,9),range(13,13),range(32,32),range(160,160),range(5760,5760),range(8192,8202),range(8239,8239),range(8287,8287),range(12288,12288)])),\\end-of-line()})],{tag(\"category\"(\"comment\"))})": {
      "match": "((?:\\/\\/)(?:(?:[\\x01-\\t]|[\\x0B-\\x{10FFFF}])*?(?!(?:[\\t-\\t]|[\\r-\\r]|[\\x20-\\x20]|[\\xA0-\\xA0]|[\\x{1680}-\\x{1680}]|[\\x{2000}-\\x{200A}]|[\\x{202F}-\\x{202F}]|[\\x{205F}-\\x{205F}]|[\\x{3000}-\\x{3000}]))(?:$)))",
      "name": "prod(lex(\"Comment\"),[lit(\"//\"),conditional(\\iter-star(\\char-class([range(1,9),range(11,1114111)])),{\\not-follow(\\char-class([range(9,9),range(13,13),range(32,32),range(160,160),range(5760,5760),range(8192,8202),range(8239,8239),range(8287,8287),range(12288,12288)])),\\end-of-line()})],{tag(\"category\"(\"comment\"))})",
      "captures": {
        "1": {
          "name": "comment"
        }
      }
    },
    "prod(lex(\"keywords\"),[alt({lit(\"lexical\"),lit(\"loc\"),lit(\"if\"),lit(\"assoc\"),lit(\"test\"),lit(\"lrel\"),lit(\"throws\"),lit(\"clear\"),lit(\"module\"),lit(\"any\"),lit(\"int\"),lit(\"quit\"),lit(\"o\"),lit(\"anno\"),lit(\"true\"),lit(\"public\"),lit(\"keyword\"),lit(\"for\"),lit(\"tuple\"),lit(\"bracket\"),lit(\"bag\"),lit(\"it\"),lit(\"visit\"),lit(\"do\"),lit(\"data\"),lit(\"layout\"),lit(\"bool\"),lit(\"edit\"),lit(\"join\"),lit(\"is\"),lit(\"import\"),lit(\"view\"),lit(\"in\"),lit(\"rat\"),lit(\"modules\"),lit(\"continue\"),lit(\"left\"),lit(\"num\"),lit(\"assert\"),lit(\"throw\"),lit(\"one\"),lit(\"help\"),lit(\"default\"),lit(\"all\"),lit(\"global\"),lit(\"syntax\"),lit(\"false\"),lit(\"finally\"),lit(\"private\"),lit(\"mod\"),lit(\"java\"),lit(\"node\"),lit(\"start\"),lit(\"set\"),lit(\"right\"),lit(\"variable\"),lit(\"map\"),lit(\"10\"),lit(\"on\"),lit(\"break\"),lit(\"dynamic\"),lit(\"solve\"),lit(\"fail\"),lit(\"unimport\"),lit(\"outermost\"),lit(\"real\"),lit(\"list\"),lit(\"insert\"),lit(\"innermost\"),lit(\"declarations\"),lit(\"else\"),lit(\"rel\"),lit(\"function\"),lit(\"notin\"),lit(\"filter\"),lit(\"datetime\"),lit(\"catch\"),lit(\"try\"),lit(\"renaming\"),lit(\"tag\"),lit(\"has\"),lit(\"Z\"),lit(\"when\"),lit(\"type\"),lit(\"append\"),lit(\"extend\"),lit(\"switch\"),lit(\"void\"),lit(\"history\"),lit(\"T\"),lit(\"while\"),lit(\"str\"),lit(\"value\"),lit(\"undeclare\"),lit(\"case\"),lit(\"alias\"),lit(\"return\"),lit(\"0\")})],{tag(\"category\"(\"keyword.control\"))})": {
      "match": "((?:\\blexical\\b)|(?:\\bloc\\b)|(?:\\bif\\b)|(?:\\bassoc\\b)|(?:\\btest\\b)|(?:\\blrel\\b)|(?:\\bthrows\\b)|(?:\\bclear\\b)|(?:\\bmodule\\b)|(?:\\bany\\b)|(?:\\bint\\b)|(?:\\bquit\\b)|(?:\\bo\\b)|(?:\\banno\\b)|(?:\\btrue\\b)|(?:\\bpublic\\b)|(?:\\bkeyword\\b)|(?:\\bfor\\b)|(?:\\btuple\\b)|(?:\\bbracket\\b)|(?:\\bbag\\b)|(?:\\bit\\b)|(?:\\bvisit\\b)|(?:\\bdo\\b)|(?:\\bdata\\b)|(?:\\blayout\\b)|(?:\\bbool\\b)|(?:\\bedit\\b)|(?:\\bjoin\\b)|(?:\\bis\\b)|(?:\\bimport\\b)|(?:\\bview\\b)|(?:\\bin\\b)|(?:\\brat\\b)|(?:\\bmodules\\b)|(?:\\bcontinue\\b)|(?:\\bleft\\b)|(?:\\bnum\\b)|(?:\\bassert\\b)|(?:\\bthrow\\b)|(?:\\bone\\b)|(?:\\bhelp\\b)|(?:\\bdefault\\b)|(?:\\ball\\b)|(?:\\bglobal\\b)|(?:\\bsyntax\\b)|(?:\\bfalse\\b)|(?:\\bfinally\\b)|(?:\\bprivate\\b)|(?:\\bmod\\b)|(?:\\bjava\\b)|(?:\\bnode\\b)|(?:\\bstart\\b)|(?:\\bset\\b)|(?:\\bright\\b)|(?:\\bvariable\\b)|(?:\\bmap\\b)|(?:\\b10\\b)|(?:\\bon\\b)|(?:\\bbreak\\b)|(?:\\bdynamic\\b)|(?:\\bsolve\\b)|(?:\\bfail\\b)|(?:\\bunimport\\b)|(?:\\boutermost\\b)|(?:\\breal\\b)|(?:\\blist\\b)|(?:\\binsert\\b)|(?:\\binnermost\\b)|(?:\\bdeclarations\\b)|(?:\\belse\\b)|(?:\\brel\\b)|(?:\\bfunction\\b)|(?:\\bnotin\\b)|(?:\\bfilter\\b)|(?:\\bdatetime\\b)|(?:\\bcatch\\b)|(?:\\btry\\b)|(?:\\brenaming\\b)|(?:\\btag\\b)|(?:\\bhas\\b)|(?:\\bZ\\b)|(?:\\bwhen\\b)|(?:\\btype\\b)|(?:\\bappend\\b)|(?:\\bextend\\b)|(?:\\bswitch\\b)|(?:\\bvoid\\b)|(?:\\bhistory\\b)|(?:\\bT\\b)|(?:\\bwhile\\b)|(?:\\bstr\\b)|(?:\\bvalue\\b)|(?:\\bundeclare\\b)|(?:\\bcase\\b)|(?:\\balias\\b)|(?:\\breturn\\b)|(?:\\b0\\b))",
      "name": "prod(lex(\"keywords\"),[alt({lit(\"lexical\"),lit(\"loc\"),lit(\"if\"),lit(\"assoc\"),lit(\"test\"),lit(\"lrel\"),lit(\"throws\"),lit(\"clear\"),lit(\"module\"),lit(\"any\"),lit(\"int\"),lit(\"quit\"),lit(\"o\"),lit(\"anno\"),lit(\"true\"),lit(\"public\"),lit(\"keyword\"),lit(\"for\"),lit(\"tuple\"),lit(\"bracket\"),lit(\"bag\"),lit(\"it\"),lit(\"visit\"),lit(\"do\"),lit(\"data\"),lit(\"layout\"),lit(\"bool\"),lit(\"edit\"),lit(\"join\"),lit(\"is\"),lit(\"import\"),lit(\"view\"),lit(\"in\"),lit(\"rat\"),lit(\"modules\"),lit(\"continue\"),lit(\"left\"),lit(\"num\"),lit(\"assert\"),lit(\"throw\"),lit(\"one\"),lit(\"help\"),lit(\"default\"),lit(\"all\"),lit(\"global\"),lit(\"syntax\"),lit(\"false\"),lit(\"finally\"),lit(\"private\"),lit(\"mod\"),lit(\"java\"),lit(\"node\"),lit(\"start\"),lit(\"set\"),lit(\"right\"),lit(\"variable\"),lit(\"map\"),lit(\"10\"),lit(\"on\"),lit(\"break\"),lit(\"dynamic\"),lit(\"solve\"),lit(\"fail\"),lit(\"unimport\"),lit(\"outermost\"),lit(\"real\"),lit(\"list\"),lit(\"insert\"),lit(\"innermost\"),lit(\"declarations\"),lit(\"else\"),lit(\"rel\"),lit(\"function\"),lit(\"notin\"),lit(\"filter\"),lit(\"datetime\"),lit(\"catch\"),lit(\"try\"),lit(\"renaming\"),lit(\"tag\"),lit(\"has\"),lit(\"Z\"),lit(\"when\"),lit(\"type\"),lit(\"append\"),lit(\"extend\"),lit(\"switch\"),lit(\"void\"),lit(\"history\"),lit(\"T\"),lit(\"while\"),lit(\"str\"),lit(\"value\"),lit(\"undeclare\"),lit(\"case\"),lit(\"alias\"),lit(\"return\"),lit(\"0\")})],{tag(\"category\"(\"keyword.control\"))})",
      "captures": {
        "1": {
          "name": "keyword.control"
        }
      }
    },
    "prod(lex(\"delimiters\"),[alt({lit(\"bottom-up-break\"),lit(\")\"),lit(\"≫\"),lit(\"\\n\"),lit(\"!:=\"),lit(\"\\'\"),lit(\"!=\"),lit(\"\\>=\"),lit(\"://\"),lit(\"non-assoc\"),lit(\"&=\"),lit(\"\\<-\"),lit(\"*=\"),lit(\"+=\"),lit(\"top-down-break\"),lit(\",\"),lit(\"...\"),lit(\"/=\"),lit(\"⇨\"),lit(\"(\"),lit(\"*/\"),lit(\"%\"),lit(\"!\\<\\<\"),lit(\"=\\>\"),lit(\"!\\>\\>\"),lit(\"||\"),lit(\"\\>\\>\"),lit(\"::\"),lit(\"⚠\"),lit(\"&&\"),lit(\"@\"),lit(\":=\"),lit(\"#\"),lit(\"\\<==\\>\"),lit(\"\\\"\"),lit(\"\\<\\<=\"),lit(\"}\"),lit(\"?=\"),lit(\"\\<:\"),lit(\"==\\>\"),lit(\"^\"),lit(\"/*\"),lit(\";\"),lit(\"{\"),lit(\"-=\"),lit(\"$T\")})],{})": {
      "match": "(?:(?:bottom\\-up\\-break)|(?:\\))|(?:\\x{226B})|(?:\\n)|(?:\\!\\:\\=)|(?:\\')|(?:\\!\\=)|(?:\\>\\=)|(?:\\:\\/\\/)|(?:non\\-assoc)|(?:\\&\\=)|(?:\\<\\-)|(?:\\*\\=)|(?:\\+\\=)|(?:top\\-down\\-break)|(?:\\,)|(?:\\.\\.\\.)|(?:\\/\\=)|(?:\\x{21E8})|(?:\\()|(?:\\*\\/)|(?:\\%)|(?:\\!\\<\\<)|(?:\\=\\>)|(?:\\!\\>\\>)|(?:\\|\\|)|(?:\\>\\>)|(?:\\:\\:)|(?:\\x{26A0})|(?:\\&\\&)|(?:\\@)|(?:\\:\\=)|(?:\\#)|(?:\\<\\=\\=\\>)|(?:\\\")|(?:\\<\\<\\=)|(?:\\})|(?:\\?\\=)|(?:\\<\\:)|(?:\\=\\=\\>)|(?:\\^)|(?:\\/\\*)|(?:\\;)|(?:\\{)|(?:\\-\\=)|(?:\\$T))",
      "name": "prod(lex(\"delimiters\"),[alt({lit(\"bottom-up-break\"),lit(\")\"),lit(\"≫\"),lit(\"\\n\"),lit(\"!:=\"),lit(\"\\'\"),lit(\"!=\"),lit(\"\\>=\"),lit(\"://\"),lit(\"non-assoc\"),lit(\"&=\"),lit(\"\\<-\"),lit(\"*=\"),lit(\"+=\"),lit(\"top-down-break\"),lit(\",\"),lit(\"...\"),lit(\"/=\"),lit(\"⇨\"),lit(\"(\"),lit(\"*/\"),lit(\"%\"),lit(\"!\\<\\<\"),lit(\"=\\>\"),lit(\"!\\>\\>\"),lit(\"||\"),lit(\"\\>\\>\"),lit(\"::\"),lit(\"⚠\"),lit(\"&&\"),lit(\"@\"),lit(\":=\"),lit(\"#\"),lit(\"\\<==\\>\"),lit(\"\\\"\"),lit(\"\\<\\<=\"),lit(\"}\"),lit(\"?=\"),lit(\"\\<:\"),lit(\"==\\>\"),lit(\"^\"),lit(\"/*\"),lit(\";\"),lit(\"{\"),lit(\"-=\"),lit(\"$T\")})],{})",
      "captures": {}
    },
    "lit(\"`\"):lit(\"`\")": {
      "begin": "(?:\\`)",
      "end": "(?:\\`)",
      "patterns": [
        {
          "match": "(\\\\\\\\)",
          "name": "prod(label(\"bs\",lex(\"ConcretePart\")),[lit(\"\\\\\\\\\")],{tag(\"category\"(\"string\"))})",
          "captures": {
            "1": {
              "name": "string"
            }
          }
        },
        {
          "match": "(\\\\\\>)",
          "name": "prod(label(\"gt\",lex(\"ConcretePart\")),[lit(\"\\\\\\>\")],{tag(\"category\"(\"string\"))})",
          "captures": {
            "1": {
              "name": "string"
            }
          }
        },
        {
          "match": "((?:[\\x01-\\t]|[\\x0B-\\;]|[\\=-\\=]|[\\?-\\[]|[\\]-\\_]|[a-\\x{10FFFF}])+?(?!(?:[\\x01-\\t]|[\\x0B-\\;]|[\\=-\\=]|[\\?-\\[]|[\\]-\\_]|[a-\\x{10FFFF}])))",
          "name": "prod(label(\"text\",lex(\"ConcretePart\")),[conditional(iter(\\char-class([range(1,9),range(11,59),range(61,61),range(63,91),range(93,95),range(97,1114111)])),{\\not-follow(\\char-class([range(1,9),range(11,59),range(61,61),range(63,91),range(93,95),range(97,1114111)]))})],{tag(\"category\"(\"string\"))})",
          "captures": {
            "1": {
              "name": "string"
            }
          }
        },
        {
          "match": "(\\\\\\<)",
          "name": "prod(label(\"lt\",lex(\"ConcretePart\")),[lit(\"\\\\\\<\")],{tag(\"category\"(\"string\"))})",
          "captures": {
            "1": {
              "name": "string"
            }
          }
        },
        {
          "match": "(\\\\\\`)",
          "name": "prod(label(\"bq\",lex(\"ConcretePart\")),[lit(\"\\\\`\")],{tag(\"category\"(\"string\"))})",
          "captures": {
            "1": {
              "name": "string"
            }
          }
        }
      ],
      "name": "lit(\"`\"):lit(\"`\")"
    },
    "lit(\"[\"):lit(\"]\")": {
      "begin": "(?:\\[)",
      "end": "(?:\\])",
      "patterns": [
        {
          "match": "((?:\\\\)(?:[\\x20-\\x20]|[\\\"-\\\"]|[\\'-\\']|[\\--\\-]|[\\<-\\<]|[\\>-\\>]|[\\[-\\]]|[b-b]|[f-f]|[n-n]|[r-r]|[t-t]))",
          "name": "prod(lex(\"Char\"),[lit(\"\\\\\"),\\char-class([range(32,32),range(34,34),range(39,39),range(45,45),range(60,60),range(62,62),range(91,93),range(98,98),range(102,102),range(110,110),range(114,114),range(116,116)])],{tag(\"category\"(\"constant\"))})",
          "captures": {
            "1": {
              "name": "constant"
            }
          }
        },
        {
          "match": "((?:(?:\\\\)[U-U](?:(?:\\b10\\b)|(?:(?:\\b0\\b)(?:[0-9]|[A-F]|[a-f])))(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f]))|(?:(?:\\\\)[u-u](?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f])(?:[0-9]|[A-F]|[a-f]))|(?:(?:\\\\)[a-a][0-7](?:[0-9]|[A-F]|[a-f])))",
          "name": "prod(lex(\"Char\"),[lex(\"UnicodeEscape\")],{tag(\"category\"(\"constant\"))})",
          "captures": {
            "1": {
              "name": "constant"
            }
          }
        }
      ],
      "name": "lit(\"[\"):lit(\"]\")"
    }
  },
  "scopeName": "source.rascalmpl.injection",
  "patterns": [
    {
      "include": "#prod(lex(\"delimiters\"),[alt({lit(\"bottom-up-break\"),lit(\")\"),lit(\"≫\"),lit(\"\\n\"),lit(\"!:=\"),lit(\"\\'\"),lit(\"!=\"),lit(\"\\>=\"),lit(\"://\"),lit(\"non-assoc\"),lit(\"&=\"),lit(\"\\<-\"),lit(\"*=\"),lit(\"+=\"),lit(\"top-down-break\"),lit(\",\"),lit(\"...\"),lit(\"/=\"),lit(\"⇨\"),lit(\"(\"),lit(\"*/\"),lit(\"%\"),lit(\"!\\<\\<\"),lit(\"=\\>\"),lit(\"!\\>\\>\"),lit(\"||\"),lit(\"\\>\\>\"),lit(\"::\"),lit(\"⚠\"),lit(\"&&\"),lit(\"@\"),lit(\":=\"),lit(\"#\"),lit(\"\\<==\\>\"),lit(\"\\\"\"),lit(\"\\<\\<=\"),lit(\"}\"),lit(\"?=\"),lit(\"\\<:\"),lit(\"==\\>\"),lit(\"^\"),lit(\"/*\"),lit(\";\"),lit(\"{\"),lit(\"-=\"),lit(\"$T\")})],{})"
    },
    {
      "include": "#lit(\"`\"):lit(\"`\")"
    },
    {
      "include": "#prod(lex(\"Comment\"),[lit(\"//\"),conditional(\\iter-star(\\char-class([range(1,9),range(11,1114111)])),{\\not-follow(\\char-class([range(9,9),range(13,13),range(32,32),range(160,160),range(5760,5760),range(8192,8202),range(8239,8239),range(8287,8287),range(12288,12288)])),\\end-of-line()})],{tag(\"category\"(\"comment\"))})"
    },
    {
      "include": "#lit(\"[\"):lit(\"]\")"
    },
    {
      "include": "#prod(lex(\"keywords\"),[alt({lit(\"lexical\"),lit(\"loc\"),lit(\"if\"),lit(\"assoc\"),lit(\"test\"),lit(\"lrel\"),lit(\"throws\"),lit(\"clear\"),lit(\"module\"),lit(\"any\"),lit(\"int\"),lit(\"quit\"),lit(\"o\"),lit(\"anno\"),lit(\"true\"),lit(\"public\"),lit(\"keyword\"),lit(\"for\"),lit(\"tuple\"),lit(\"bracket\"),lit(\"bag\"),lit(\"it\"),lit(\"visit\"),lit(\"do\"),lit(\"data\"),lit(\"layout\"),lit(\"bool\"),lit(\"edit\"),lit(\"join\"),lit(\"is\"),lit(\"import\"),lit(\"view\"),lit(\"in\"),lit(\"rat\"),lit(\"modules\"),lit(\"continue\"),lit(\"left\"),lit(\"num\"),lit(\"assert\"),lit(\"throw\"),lit(\"one\"),lit(\"help\"),lit(\"default\"),lit(\"all\"),lit(\"global\"),lit(\"syntax\"),lit(\"false\"),lit(\"finally\"),lit(\"private\"),lit(\"mod\"),lit(\"java\"),lit(\"node\"),lit(\"start\"),lit(\"set\"),lit(\"right\"),lit(\"variable\"),lit(\"map\"),lit(\"10\"),lit(\"on\"),lit(\"break\"),lit(\"dynamic\"),lit(\"solve\"),lit(\"fail\"),lit(\"unimport\"),lit(\"outermost\"),lit(\"real\"),lit(\"list\"),lit(\"insert\"),lit(\"innermost\"),lit(\"declarations\"),lit(\"else\"),lit(\"rel\"),lit(\"function\"),lit(\"notin\"),lit(\"filter\"),lit(\"datetime\"),lit(\"catch\"),lit(\"try\"),lit(\"renaming\"),lit(\"tag\"),lit(\"has\"),lit(\"Z\"),lit(\"when\"),lit(\"type\"),lit(\"append\"),lit(\"extend\"),lit(\"switch\"),lit(\"void\"),lit(\"history\"),lit(\"T\"),lit(\"while\"),lit(\"str\"),lit(\"value\"),lit(\"undeclare\"),lit(\"case\"),lit(\"alias\"),lit(\"return\"),lit(\"0\")})],{tag(\"category\"(\"keyword.control\"))})"
    }
  ],
  "injectionSelector": "R:source.rascalmpl"
}